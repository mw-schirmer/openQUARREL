% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_and_settings.R
\name{optim_fn}
\alias{optim_fn}
\title{Objective Function for Hydrological Model Calibration}
\usage{
optim_fn(
  ParamOptim,
  hydro_data,
  split_indices,
  model,
  input,
  snow_module = NULL,
  snow_input,
  snow_parameters = NULL,
  error_crit,
  cal_maximize,
  cal_q_transfo,
  lambda,
  do_transfo_param,
  airGR_RunOptions = NULL,
  airGR_RunOptions_snow_module = NULL
)
}
\arguments{
\item{ParamOptim}{A numeric vector of model parameters to be optimized.}

\item{hydro_data}{A list or data frame containing observed runoff, typically loaded
using \code{\link{load_meteo_data}}.}

\item{split_indices}{A list of index vectors indicating warm-up and calibration periods,
usually from \code{\link{split_data_set}}.}

\item{model}{A string specifying the hydrological model.}

\item{input}{A list of model input data, typically created using \code{\link{create_input}}.}

\item{snow_module}{Optional. A string specifying the snow module (e.g., \code{"CemaNeige"}).}

\item{snow_input}{Optional. Input data for the snow module.}

\item{snow_parameters}{Optional. A vector of fixed snow parameters. If \code{NULL},
snow parameters are assumed to be part of \code{ParamOptim}.}

\item{error_crit}{A string naming the error criterion function (e.g., \code{"KGE"}).
Must be compatible with \code{\link{calc_hydroGOF}} or from the \pkg{hydroGOF} package.}

\item{cal_maximize}{Logical. If \code{TRUE}, the calibration maximizes the objective function.}

\item{cal_q_transfo}{A string indicating how runoff should be transformed
(see \code{\link{transfo_q}}).}

\item{lambda}{Optional. A numeric value or vector used for regularization or transformation.}

\item{do_transfo_param}{Logical. If \code{TRUE}, parameters are transformed from the unit hypercube
to real-world values before simulation.}

\item{airGR_RunOptions}{Optional. Run options for \pkg{airGR} models.}

\item{airGR_RunOptions_snow_module}{Optional. Run options for the snow module if using \pkg{airGR}.}
}
\value{
A single numeric value representing the error criterion to be minimized or maximized.
}
\description{
This function is used as the objective function during model calibration.
It simulates a hydrological model over the warm-up and calibration periods
and evaluates an error criterion (e.g., KGE) on the calibration period only.
}
\details{
The function handles parameter transformation, snow module simulation,
and error handling for cases where the simulated runoff is invalid (e.g., all NAs or zeros).
}
\note{
\itemize{
\item If \code{Qsim} is entirely \code{NA}, a large penalty value (\code{+/- 1e10}) is returned.
\item If \code{Qsim} is all zeros and the criterion is \code{KGE}, the asymptotic value \code{1 - sqrt(3)} is returned.
\item \code{Qsim} is coerced to numeric to ensure compatibility with \code{Qobs}, especially for models like TUW.
\item Future improvements may include spatially explicit versions and refined NA handling.
}
}
\examples{
\dontrun{
cal_results <- DEoptim::DEoptim(
  fn = optim_fn,
  lower = lower,
  upper = upper,
  control = DEoptim::DEoptim.control(NP = 50, itermax = 100),
  hydro_data = hydro_data,
  split_indices = split_indices,
  model = "GR4J",
  input = input,
  error_crit = "KGE",
  cal_maximize = TRUE,
  cal_q_transfo = "none",
  do_transfo_param = TRUE
)
}
}
\seealso{
\code{\link{calibrate_model}}, \code{\link{create_input}}, \code{\link{load_meteo_data}},
\code{\link{calc_hydroGOF}}, \code{\link{transfo_param}}, \code{\link{simulate_model}}, \code{\link{simulate_snow}}
}
